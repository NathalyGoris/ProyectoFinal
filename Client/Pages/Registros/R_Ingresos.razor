@page "/registro-ingresos"

<h3 class="text-primary">Registro de Ingresos</h3>

<EditForm Model="nuevoIngreso" OnValidSubmit="RegistrarIngreso">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Fecha" class="text-muted">Fecha:</label>
        <InputDate id="Fecha" @bind-Value="nuevoIngreso.Fecha" class="form-control" />
        <ValidationMessage For="@(() => nuevoIngreso.Fecha)" />
    </div>
    <div class="form-group">
        <label for="Monto" class="text-muted">Monto:</label>
        <InputNumber id="Monto" @bind-Value="nuevoIngreso.Monto" class="form-control" />
        <ValidationMessage For="@(() => nuevoIngreso.Monto)" />
    </div>
    <div class="form-group">
        <label for="Descripcion" class="text-muted">Descripción:</label>
        <InputText id="Descripcion" @bind-Value="nuevoIngreso.Descripcion" class="form-control" />
        <ValidationMessage For="@(() => nuevoIngreso.Descripcion)" />
    </div>
    <div class="form-group">
        <label for="Usuario" class="text-muted">Usuario:</label>
        <InputSelect id="Usuario" @bind-Value="nuevoIngreso.Usuario" class="form-control">
            @foreach (var usuario in listaUsuarios)
            {
                <option value="@usuario">@usuario.Nombre</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => nuevoIngreso.Usuario)" />
    </div>
    <div class="form-group">
        <label for="Categoria" class="text-muted">Categoría:</label>
        <InputSelect id="Categoria" @bind-Value="nuevoIngreso.Categoria" class="form-control">
            @foreach (var categoria in listaCategorias)
            {
                <option value="@categoria">@categoria.Nombre</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => nuevoIngreso.Categoria)" />
    </div>

    <div class="d-flex justify-content-end mt-4">
        <button type="submit" class="btn btn-primary">Registrar Ingreso</button>
    </div>
</EditForm>

@code {
    // Propiedad para el nuevo ingreso
    private Transacciones nuevoIngreso = new Transacciones();
    private List<Usuarios> listaUsuarios = new List<Usuarios>(); // Supongamos que tienes una lista de usuarios
    private List<Ingresos> listaCategorias = new List<Ingresos>(); // Supongamos que tienes una lista de categorías

    // Método para registrar el ingreso
    private void RegistrarIngreso()
    {
        // Aquí puedes agregar la lógica para guardar el nuevoIngreso como un ingreso en la base de datos o repositorio
        // Por ejemplo, podrías usar una llamada a una API o un servicio para realizar el registro

        // Una vez que se ha guardado el ingreso, puedes redirigir al usuario a otra página o realizar otras acciones necesarias
    }

    protected override async Task OnInitializedAsync()
    {
        // Carga de datos ficticios para listaUsuarios y listaCategorias
        listaUsuarios = new List<Usuarios>
        {
            new Usuarios { ID = 1, Nombre = "Usuario1" },
            new Usuarios { ID = 2, Nombre = "Usuario2" },
            new Usuarios { ID = 3, Nombre = "Usuario3" }
        };

        listaCategorias = new List<Ingresos>
        {
            new Ingresos { ID = 1, Nombre = "Alimentos" },
            new Ingresos { ID = 2, Nombre = "Transporte" },
            new Ingresos { ID = 3, Nombre = "Entretenimiento" }
        };
    }
}
